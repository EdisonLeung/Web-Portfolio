{"version":3,"sources":["projects/Constants.js","projects/ServerRequests.js","components/Footer.js","projects/CampusMap.js","components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactUs.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["UW_LATITUDE","UW_LATITUDE_OFFSET","UW_LATITUDE_SCALE","UW_LONGITUDE","UW_LONGITUDE_OFFSET","UW_LONGITUDE_SCALE","UW_LATITUDE_CENTER","UW_LONGITUDE_CENTER","xToLon","x","yToLat","y","makeRequestRoute","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","start","end","setLines","setZoom","setCenter","paths","responsePromise","response","object","sumLon","sumLat","i","path","wrap","_context","prev","next","console","log","fetch","sent","ok","alert","abrupt","json","length","push","startPoint","lat","lng","endPoint","Math","hypot","t0","stop","this","_x","_x2","_x3","_x4","_x5","apply","arguments","_callee2","setBuildings","buildingMap","building","shortName","_context2","longName","getBuildingLocation","_x7","_x8","_getBuildingLocation","_callee3","name","setPoint","buildingLocation","_context3","Footer","resumeData","props","react_default","createElement","className","socialLinks","map","item","href","url","id","title","Component","CampusMap","CampusMap_Header","style","height","src","alt","CampusMap_Body","backgroundColor","Footer_Footer","Body","useLoadScript","googleMapsApiKey","process","isLoaded","Map","initial_center","_useState","useState","_useState2","slicedToArray","center","_useState3","_useState4","zoom","_useState5","_useState6","lines","_useState7","_useState8","buildings","_useState9","_useState10","setStart","_useState11","_useState12","setEnd","_useState13","_useState14","setStartPoint","_useState15","_useState16","setEndPoint","useEffect","window","scrollTo","_x6","_initializeBuildingList","initializeBuildingList","esm","mapContainerClassName","mapContainerStyle","width","line","index","key","options","strokeColor","strokeOpacity","strokeWeight","position","parseFloat","icon","role","react_select_esm","placeholder","opt","label","value","onChange","required","Header","Fragment","color","fontFamily","roleDescription","target","About","aboutme","email","number","Resume","skillsDescription","skills","skillname","education","UniversityName","date","info","data","marginTop","courses","course","fontSize","clubs","work","padding","CompanyName","logo","Achievements","achievement","Porfolio","portfolio","description","skill","undefined","gitLink","rel","link","class","maxWidth","display","imgurl","ContactUs","imagebaseurl","linkedinId","thumbnail","noteworthy_projects","App","useRoutes","element","Home","CampusMap_CampusMap","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","ContactUs_ContactUs","AppWrapper","react_router_dom_dist","basename","App_App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0f14d708.chunk.js","sourcesContent":["/*\r\n * Copyright (C) 2022 Hal Perkins.  All rights reserved.  Permission is\r\n * hereby granted to students registered for University of Washington\r\n * CSE 331 for use solely during Winter Quarter 2022 for purposes of\r\n * the course.  No other use, copying, distribution, or modification\r\n * is permitted without prior written consent. Copyrights for\r\n * third-party components of this work must be honored.  Instructors\r\n * interested in reusing these course materials should contact the\r\n * author.\r\n */\r\n\r\n// Latitude of the UW Seattle campus\r\nexport const UW_LATITUDE = 47.65878405511131;\r\n\r\n// Offset to translate coordinate system\r\nexport const UW_LATITUDE_OFFSET = 807.35188;\r\n\r\n// Scale to translate coordinate system\r\nexport const UW_LATITUDE_SCALE = -0.00000576766;\r\n\r\n// Longitude of the UW Seattle campus\r\nexport const UW_LONGITUDE = -122.31305164734569;\r\n\r\n// Offset to translate coordinate system\r\nexport const UW_LONGITUDE_OFFSET = 1370.6408;\r\n\r\n// Scale to translate coordinate system\r\nexport const UW_LONGITUDE_SCALE = 0.00000848028;\r\n\r\n// Map center\r\nexport const UW_LATITUDE_CENTER = 47.65440627742146;\r\n\r\n// Map center\r\nexport const UW_LONGITUDE_CENTER = -122.30476957834502;\r\n\r\nexport const MAP_SCALE_FACTOR = 0.05816701949;","import {\r\n  MAP_SCALE_FACTOR,\r\n  UW_LATITUDE,\r\n  UW_LATITUDE_OFFSET,\r\n  UW_LATITUDE_SCALE,\r\n  UW_LONGITUDE,\r\n  UW_LONGITUDE_OFFSET,\r\n  UW_LONGITUDE_SCALE,\r\n} from \"./Constants\";\r\n\r\nfunction xToLon(x) {\r\n  return UW_LONGITUDE + (x - UW_LONGITUDE_OFFSET) * UW_LONGITUDE_SCALE;\r\n}\r\n\r\n/**\r\n * Converts y coordinate to latitude\r\n */\r\nfunction yToLat(y) {\r\n  return UW_LATITUDE + (y - UW_LATITUDE_OFFSET) * UW_LATITUDE_SCALE;\r\n}\r\n\r\n/*\r\nFinds shortest path from one building to another\r\n*/\r\nexport const makeRequestRoute = async (start, end, setLines, setZoom, setCenter) => {\r\n  const paths = [];\r\n  if (start === \"\" || end === \"initEndSelection\") {\r\n    console.log(\"No building selected\");\r\n  } else {\r\n    try {\r\n      let responsePromise = fetch(\r\n        \"https://spark-heroku-example.herokuapp.com/route?start=\" + start + \"&end=\" + end\r\n      );\r\n      let response = await responsePromise;\r\n\r\n      if (!response.ok) {\r\n        alert(\"invalid input\");\r\n        return;\r\n      }\r\n\r\n      let object = await response.json();\r\n\r\n      let sumLon = 0;\r\n      let sumLat = 0;\r\n      for (let i = 0; i < object.path.length; i++) {\r\n        let path = object.path[i];\r\n        paths.push({\r\n          startPoint: {\r\n            lat: yToLat(path.start.y),\r\n            lng: xToLon(path.start.x),\r\n          },\r\n          endPoint: { lat: yToLat(path.end.y), lng: xToLon(path.end.x) },\r\n        });\r\n        sumLon += xToLon(path.start.x) + xToLon(path.end.x) \r\n        sumLat += yToLat(path.start.y) + yToLat(path.end.y) \r\n\r\n      }\r\n      const distance = Math.hypot(paths[paths.length-1].endPoint.lat-paths[0].startPoint.lat, paths[paths.length-1].endPoint.lng-paths[0].startPoint.lng)\r\n      setLines(paths);\r\n      setZoom(17);\r\n      // console.log(Math.sqrt(distance * 84463.67103358038))\r\n      // console.log(Math.hypot(paths[paths.length-1].endPoint.lat-paths[0].startPoint.lat, paths[paths.length-1].endPoint.lng-paths[0].startPoint.lng))\r\n      setCenter({lat: sumLat / (paths.length * 2), lng: sumLon / (paths.length * 2)})\r\n    } catch (e) {\r\n      alert(\"unable to render path\");\r\n      console.log(e);\r\n    }\r\n  }\r\n};\r\n\r\nexport async function initializeBuildingList(setBuildings) {\r\n  const buildingMap = [];\r\n  try {\r\n    let responsePromise = fetch(\"https://spark-heroku-example.herokuapp.com/buildings\");\r\n    let response = await responsePromise;\r\n\r\n    let building = await response.json();\r\n    for (let shortName in building) {\r\n      buildingMap.push({\r\n        shortName: shortName,\r\n        longName: building[shortName],\r\n      });\r\n    }\r\n  } catch (e) {\r\n    alert(\"Unable to retrieve buildings\");\r\n    console.log(e);\r\n  }\r\n  setBuildings(buildingMap);\r\n}\r\n\r\nexport async function getBuildingLocation(name, setPoint) {\r\n  try {\r\n    let responsePromise = fetch(\"https://spark-heroku-example.herokuapp.com/building_location?name=\" + name)\r\n    let response = await responsePromise;\r\n\r\n    let buildingLocation = await response.json();\r\n    \r\n    setPoint({ lat: yToLat(buildingLocation.y), lng: xToLon(buildingLocation.x) })\r\n  } catch(e) {\r\n    alert(\"Unable to retrieve building location\")\r\n  }\r\n}","import React, { Component } from \"react\";\r\nexport default class Footer extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <footer>\r\n        <div className=\"row\">\r\n          <div className=\"twelve columns\">\r\n            <ul className=\"social-links\">\r\n              {resumeData.socialLinks &&\r\n                resumeData.socialLinks.map((item) => {\r\n                  return (\r\n                    <li>\r\n                      <a href={item.url}>\r\n                        <i className={item.className} />\r\n                      </a>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </div>\r\n          <div id=\"go-top\">\r\n            <a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\r\n              <i className=\"icon-up-open\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Polyline,\r\n  Marker,\r\n} from \"@react-google-maps/api\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport { UW_LATITUDE_CENTER, UW_LONGITUDE_CENTER } from \"./Constants\";\r\n\r\nimport Select from \"react-select\";\r\nimport {\r\n  getBuildingLocation,\r\n  initializeBuildingList,\r\n  makeRequestRoute,\r\n} from \"./ServerRequests\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nexport default class CampusMap extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <section id=\"project-read\">\r\n          <div style={{ height: \"10vh\"}} />\r\n          <div className=\"row\">\r\n            <h1>UW Campus Map (Project Overview)</h1>\r\n            <h6>\r\n              Designed a web program for users to be able to find the shortest\r\n              path between two buildings at the University of Washington. By\r\n              selecting from the dropdown menu or using the search bar at the\r\n              top right of the map, users can select a start location and\r\n              desitnation location. The program will then automatically generate\r\n              the shortest path between the two locations.\r\n            </h6>\r\n            <h1>Tools Used</h1>\r\n            <ul className=\"skills\">\r\n              <li>React</li>\r\n              <li>Java</li>\r\n              <li>Typescript</li>\r\n              <li>Node.js</li>\r\n              <li>Spark Framework</li>\r\n              <li>JUnit Testing</li>\r\n              <li>Google API</li>\r\n            </ul>\r\n            <img\r\n              src=\"images/UW_Logo.png\"\r\n              alt=\"\"\r\n              className=\"center header-offset\"\r\n            />\r\n          </div>\r\n        </section>\r\n        <Body />\r\n        <section id=\"project-read\">\r\n          <div className=\"row\">\r\n            <h1>Project Development</h1>\r\n            <h6>\r\n              Built the project using React.js for simplicty and component based\r\n              development. The backend uses a Spark Framework Java server to\r\n              communicate between the Java program that handles the logic and\r\n              the frontend UI.\r\n            </h6>\r\n            <br />\r\n            <h6>\r\n              For the Java Program, I created a Generic GraphADT where the nodes\r\n              represented various points on campus and the edges represented the\r\n              distance between each point. This allowed me to represent the\r\n              roads and buildings on campus. Using Dijkstra's Algorithm, I was\r\n              able to find the shortest path from two given points\r\n            </h6>\r\n            <br />\r\n            <h6>\r\n              For the Map itself, I used the Google Maps API to get an accurate\r\n              map of the University.\r\n            </h6>\r\n            <br />\r\n            <h6>\r\n              {\" \"}\r\n              To ensure code stability, I implemented JUnit testing to ensure\r\n              the functionality of the GraphADT and Typescript for\r\n              type-checking.\r\n            </h6>\r\n            <br />\r\n          </div>\r\n        </section>\r\n        <div style={{ backgroundColor: \"black\" }}>\r\n          <Footer resumeData={resumeData} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Body = () => {\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_PUBLIC_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n  return <Map />;\r\n};\r\n\r\nfunction Map() {\r\n  const initial_center = { lat: UW_LATITUDE_CENTER, lng: UW_LONGITUDE_CENTER };\r\n\r\n  const [center, setCenter] = useState(initial_center);\r\n  const [zoom, setZoom] = useState(16);\r\n  const [lines, setLines] = useState([]);\r\n\r\n  const [buildings, setBuildings] = useState([]);\r\n  const [start, setStart] = useState(\"\");\r\n  const [end, setEnd] = useState(\"\");\r\n\r\n  const [startPoint, setStartPoint] = useState({});\r\n  const [endPoint, setEndPoint] = useState({});\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0,0)\r\n    initializeBuildingList(setBuildings);\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"map\" className=\"row center-box\">\r\n      <GoogleMap\r\n        zoom={zoom}\r\n        center={center}\r\n        mapContainerClassName=\"column\"\r\n        mapContainerStyle={{ width: \"100%\" }}\r\n      >\r\n        {lines.map((line, index) => (\r\n          <Polyline\r\n            key={index}\r\n            path={[line.startPoint, line.endPoint]}\r\n            options={{\r\n              strokeColor: \"#ff2527\",\r\n              strokeOpacity: 0.75,\r\n              strokeWeight: 2,\r\n            }}\r\n          />\r\n        ))}\r\n        {start !== \"\" && (\r\n          <Marker\r\n            position={{\r\n              lat: parseFloat(startPoint.lat),\r\n              lng: parseFloat(startPoint.lng),\r\n            }}\r\n            icon={{\r\n              url: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\r\n            }}\r\n          ></Marker>\r\n        )}\r\n        {end !== \"\" && (\r\n          <Marker\r\n            position={{\r\n              lat: parseFloat(endPoint.lat),\r\n              lng: parseFloat(endPoint.lng),\r\n            }}\r\n            icon={{\r\n              url: \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\r\n            }}\r\n          ></Marker>\r\n        )}\r\n      </GoogleMap>\r\n      <div className=\"overlay-box\">\r\n        <h4>Find Path Between Buildings</h4>\r\n\r\n        <form role=\"search\">\r\n          <Select\r\n            id=\"search\"\r\n            placeholder=\"Search Start Building...\"\r\n            options={buildings.map((opt) => ({\r\n              label: opt.longName + \" - \" + opt.shortName,\r\n              value: opt.shortName,\r\n            }))}\r\n            onChange={(opt) => {\r\n              setStart(opt.value);\r\n              getBuildingLocation(opt.value, setStartPoint);\r\n              if (end !== \"\")\r\n                makeRequestRoute(opt.value, end, setLines, setZoom, setCenter);\r\n            }}\r\n            required\r\n          />\r\n        </form>\r\n\r\n        <form role=\"search\">\r\n          <Select\r\n            id=\"search\"\r\n            placeholder=\"Search Destination Building...\"\r\n            options={buildings.map((opt) => ({\r\n              label: opt.longName + \" - \" + opt.shortName,\r\n              value: opt.shortName,\r\n            }))}\r\n            onChange={(opt) => {\r\n              setEnd(opt.value);\r\n              getBuildingLocation(opt.value, setEndPoint);\r\n              if (start !== \"\")\r\n                makeRequestRoute(\r\n                  start,\r\n                  opt.value,\r\n                  setLines,\r\n                  setZoom,\r\n                  setCenter\r\n                );\r\n            }}\r\n            required\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Header = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div id=\"home\">\r\n        <nav id=\"nav-wrap\">\r\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n            Show navigation\r\n          </a>\r\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\r\n            Hide navigation\r\n          </a>\r\n          <ul id=\"nav\" className=\"nav\">\r\n            <li>\r\n              <a href=\"/#home\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/#about\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/#resume\">\r\n                Resume\r\n              </a>\r\n            </li>\r\n            <li className=\"current\">\r\n              <a href=\"/#portfolio\">\r\n                Projects\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/#contact\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nexport default class Header extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <React.Fragment>\r\n      \r\n      <header id=\"home\">\r\n         <nav id=\"nav-wrap\">\r\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\r\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\r\n            <ul id=\"nav\" className=\"nav\">\r\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Projects</a></li>\r\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\r\n            </ul>\r\n         </nav>\r\n\r\n         <div className=\"row banner\">\r\n            <div className=\"banner-text\">\r\n               <h1 className=\"responsive-headline\">I'm {resumeData.name}.</h1>\r\n               <h3 style={{color:'#fff', fontFamily:'sans-serif '}}>{resumeData.roleDescription}\r\n               </h3>\r\n               <hr/>\r\n               <ul className=\"social\">\r\n                  {\r\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\r\n                      return(\r\n                              <li key={item.name}>\r\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\r\n                                <h6 style={{color: \"#fff\"}}>{item.name}</h6>\r\n                              </li>\r\n                            )\r\n                          }\r\n                    )\r\n                  }\r\n               </ul>\r\n            </div>\r\n         </div>\r\n\r\n         <p className=\"scrolldown\">\r\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\r\n         </p>\r\n\r\n      </header>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nexport default class About extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"about\">\r\n        <div className=\"row\">\r\n          <div className=\"three columns\">\r\n            <img className=\"profile-pic\" src=\"images/profilepic.jpg\" alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            <h2>About Me</h2>\r\n            <p>{resumeData.aboutme}</p>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"columns contact-details\">\r\n                <h2>Contact Details</h2>\r\n                <p className=\"address\">\r\n                  <div>\r\n                    email:{\" \"}\r\n                    <a href=\"mailto:edleung03@gmail.com?\">{resumeData.email}</a>\r\n                  </div>\r\n                  <div>mobile: {resumeData.number}</div>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport default class Resume extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"resume\">\r\n        <div className=\"row skill\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Skills</span>\r\n            </h1>\r\n          </div>\r\n          <div className=\"nine columns main-col\">\r\n            <p>{resumeData.skillsDescription}</p>\r\n            <ul className=\"skills\">\r\n              {resumeData.skills &&\r\n                resumeData.skills.map((item) => {\r\n                  return <li> {item.skillname} </li>;\r\n                })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row education\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Education</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {resumeData.education &&\r\n              resumeData.education.map((item) => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3>{item.UniversityName}</h3>\r\n                      <p className=\"info\">\r\n                        <em className=\"date\">{item.date}</em>\r\n                      </p>\r\n                      <ul>\r\n                        {item.info.map((data) => {\r\n                          return <li>{data}</li>;\r\n                        })}\r\n                        <li>\r\n                          <b>Relevant Coursework:</b>\r\n                          <ul className=\"skills\" style={{ marginTop: 0 }}>\r\n                            {item.courses.map((course) => {\r\n                              return (\r\n                                <li style={{ fontSize: 12 }}> {course} </li>\r\n                              );\r\n                            })}\r\n                          </ul>\r\n                        </li>\r\n                        <li>\r\n                          <b>Clubs and Organizations:</b> {item.clubs}\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div className=\"row work\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Work Experience</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            {resumeData.work &&\r\n              resumeData.work.map((item) => {\r\n                return (\r\n                  <div className=\"row item\">\r\n                    <div className=\"twelve columns\">\r\n                      <h3 className=\"eleven columns\" style={{ padding: \"0px\" }}>\r\n                        {item.CompanyName}\r\n                        <h5 className=\"date\">{item.date}</h5>\r\n                      </h3>\r\n                      <div className=\"one columns\" style={{ padding: \"0px\" }}>\r\n                        <img src={item.logo} alt=\"\" />\r\n                      </div>\r\n\r\n                      <ul\r\n                        className=\"twelve columns\"\r\n                        style={{ marginTop: \"0px\" }}\r\n                      >\r\n                        {item.Achievements.map((achievement) => {\r\n                          return <li> {achievement}</li>;\r\n                        })}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Porfolio extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"portfolio\">\r\n        <div className=\"row\">\r\n          <div className=\"twelve columns collapsed\">\r\n            <h1>\r\n              <span>Some of My Projects</span>\r\n            </h1>\r\n            <ul>\r\n              {resumeData.portfolio &&\r\n                resumeData.portfolio.map((item) => {\r\n                  return (\r\n                    <li className=\"projects-grid\">\r\n                      <div className=\"project-content\">\r\n                        <div>\r\n                          <p className=\"project-overline\">Featured Project</p>\r\n                          <h3 className=\"project-title\">{item.name}</h3>\r\n                          <div className=\"project-description\">\r\n                            <p>{item.description}</p>\r\n                          </div>\r\n                          <ul className=\"project-tech-list\">\r\n                            {item.skills.map((skill) => (\r\n                              <li>{skill}</li>\r\n                            ))}\r\n                          </ul>\r\n                          <div className=\"project-links\">\r\n                            {item.gitLink !== undefined && (\r\n                              <a\r\n                                href=\"https://github.com/EdisonLeung/Campus-Map\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                              >\r\n                                <i className=\"fa fa-github\"></i>\r\n                              </a>\r\n                            )}\r\n\r\n                            <a href={item.link}>\r\n                              <div style={{ fontSize: 15 }}>\r\n                                View Project &nbsp;\r\n                              </div>\r\n                              <i class=\"fa-solid fa-arrow-up-right-from-square\"></i>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"project-image portfolio-item\">\r\n                        <div className=\"gatsby-image-wrapper gatsby-image-wrapper-constrained img\">\r\n                          <div style={{ maxWidth: 700, display: \"block\" }}>\r\n                            <a href={item.link}>\r\n                              <div className=\"item-wrap\">\r\n                                <img src={item.imgurl} alt=\"\" />\r\n                                <div className=\"overlay\">\r\n                                  <div className=\"portfolio-item-meta\">\r\n                                    <h5>{item.name}</h5>\r\n                                    <p>View Project</p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n            </ul>\r\n            {/* <h1 style={{ marginTop: \"10%\", textAlign: \"center\" }}>\r\n              Other Noteworthy Projects\r\n            </h1>\r\n            <ul className=\"gg\">\r\n              {resumeData.noteworthy_projects.map((item) => (\r\n                <a\r\n                  href={item.link}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <li>\r\n                    <div className=\"project-inner\">\r\n                      <div style={{ display: \"block\" }}>\r\n                        <div className=\"project-top\">\r\n                          <div className=\"folder\">\r\n                            <i class=\"fa-regular fa-folder\"></i>\r\n                          </div>\r\n                          <div className=\"project-links\">\r\n                            <a\r\n                              href={item.link}\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              <i class=\"fa fa-github\"></i>\r\n                            </a>\r\n                          </div>\r\n                        </div>\r\n                        <h3 className=\"project-title\">{item.name}</h3>\r\n                        <div className=\"project-description\">\r\n                          <p>{item.description}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div style={{ display: \"block\" }}>\r\n                        <ul className=\"project-tech-list\">\r\n                          {item.skills.map((skill) => (\r\n                            <li>{skill}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </a>\r\n              ))}\r\n            </ul> */}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nexport default class ContactUs extends Component {\r\n  render() {\r\n    let resumeData = this.props.resumeData;\r\n    return (\r\n      <section id=\"contact\">\r\n        <div className=\"row\">\r\n          <div className=\"ten columns\">\r\n            <p className=\"lead\">\r\n              Feel free to contact me for any work or suggestions below\r\n            </p>\r\n          </div>\r\n          {/* <form\r\n            action=\"mailto:your_email@example.com\"\r\n            method=\"post\"\r\n            enctype=\"text/plain\"\r\n          >\r\n            <label for=\"name\">Name:</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" />\r\n            <label for=\"email\">Email:</label>\r\n            <input type=\"email\" id=\"email\" name=\"email\" />\r\n            <label for=\"subject\">Subject:</label>\r\n            <input type=\"text\" id=\"subject\" name=\"subject\" />\r\n            <label for=\"message\">Message:</label>\r\n            <textarea id=\"message\" name=\"message\" rows=\"2\" cols=\"10\" />\r\n            <label for=\"submit\" />\r\n            <input type=\"submit\" value=\"Send\" />\r\n          </form> */}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","let resumeData = {\r\n  imagebaseurl: \"https://rbhatia46.github.io/\",\r\n  name: \"Edison Leung | Software Developer\",\r\n  linkedinId: \"Your LinkedIn Id\",\r\n  roleDescription:\r\n    \"I love exploring and creating new technologies. I'm always trying to find something funny in any situation\",\r\n  socialLinks: [\r\n    {\r\n      name: \"linkedin\",\r\n      url: \"https://www.linkedin.com/in/edleung03/\",\r\n      className: \"fa fa-linkedin\",\r\n    },\r\n    {\r\n      name: \"github\",\r\n      url: \"https://github.com/EdisonLeung/\",\r\n      className: \"fa fa-github\",\r\n    },\r\n    {\r\n      name: \"resume\",\r\n      url: \"https://drive.google.com/file/d/1qwD42YlEOCNcUD_RuuOGs7OXyMwjLYPe/view?usp=sharing\",\r\n      className: \"fa fa-file\",\r\n    },\r\n  ],\r\n  aboutme:\r\n    \"Experienced in programming with various programming languages. Hands on experience with IOS and Android mobile app development. Seeking opportunities to pursue my passion in computer science and learn more about its applications\",\r\n  email: \"edleung03@gmail.com\",\r\n  number: \"+1(206)681-7124\",\r\n  education: [\r\n    {\r\n      UniversityName: \"University of Washington\",\r\n      date: \"09/2021 - Current\",\r\n      info: [\r\n        \"Pursuing B.S. in Computer Science from Paul G. Allen Center for Computer Science and Engineering\",\r\n        \"Major GPA: 3.87\",\r\n      ],\r\n      courses: [\r\n        \"Software Design and Implementation\",\r\n        \"Hardware Software Interface\",\r\n        \"Systems and Software Tools\",\r\n        \"Foundations of Computing\",\r\n        \"Data Structures and Parallelism\",\r\n        \"Calculus Series and Linear Algebra\",\r\n      ],\r\n      clubs:\r\n        \"Advanced Robotics (ARUW), Association for Computing Machinery (ACM), Asian American InterVarsity (AAIV)\",\r\n    },\r\n  ],\r\n  work: [\r\n    {\r\n      CompanyName: \"CSE Course TA / University of Washington\",\r\n      logo: \"images/PaulAllenLogo.png\",\r\n      date: \"09/2022 - Current\",\r\n      Achievements: [\r\n        \"Computer Science Course TA for Software Design and Implementation and Systems and Software Tools courses\",\r\n        \"Improved grading efficiency by writing auto-graders in python to quickly and accurately grade student’s code submissions and automatically upload scores to UW’s Learning Management Systems\",\r\n        \"Held office hours and led additional optional lecture sessions to help students better understand lecture material\",\r\n      ],\r\n    },\r\n    {\r\n      CompanyName: \"Solala / Software Engineer\",\r\n      date: \"06/2022 - 09/2022\",\r\n      logo: \"images/Solala.jpg\",\r\n      Achievements: [\r\n        \"Full-Stack developer for website, IOS, and Android mobile app. Used expo for easy mobile app integration\",\r\n        \"Worked on client-server development and created database responsible for storing and retrieving user information using firebase\",\r\n        \"Used React Native and JavaScript for common UI and code reuse between web, IOS, and Android platforms\",\r\n        \"Programmed UI components such as a task manager, calendar, reminders tab, and navigation manager\",\r\n        \"Designed and created user friendly interface using CSS and React Native components\",\r\n        \"Optimized sorting algorithm to organize user data efficiently\",\r\n      ],\r\n    },\r\n    {\r\n      CompanyName: \"Coding Instructor / ID Tech\",\r\n      date: \"03/2021-09/2021, 06/2022-08/20220\",\r\n      logo: \"images/IDTech.jpg\",\r\n      Achievements: [\r\n        \"Taught object-oriented design and how to apply it in Java and C#\",\r\n        \"Taught game design principles through 3D game creation using Unity and API usage and integration through Minecraft modding\",\r\n        \"Developed game components for client-server interface\",\r\n        \"Programmed using Lua to develop and publish online games on Roblox\",\r\n        \"Developed and improved programming curriculum to better focus on understanding why code works rather than how it works\",\r\n      ],\r\n    },\r\n  ],\r\n  skillsDescription: \"\",\r\n  skills: [\r\n    {\r\n      skillname: \"Java\",\r\n    },\r\n    {\r\n      skillname: \"JavaScript\",\r\n    },\r\n    {\r\n      skillname: \"HTML5/CSS\",\r\n    },\r\n    {\r\n      skillname: \"Python\",\r\n    },\r\n    {\r\n      skillname: \"PostgreSQL\",\r\n    },\r\n    {\r\n      skillname: \"C/C++\",\r\n    },\r\n    {\r\n      skillname: \"C#\",\r\n    },\r\n    {\r\n      skillname: \"Git\",\r\n    },\r\n    {\r\n      skillname: \"TypeScript\",\r\n    },\r\n    {\r\n      skillname: \"React/React Native\",\r\n    },\r\n    {\r\n      skillname: \"Tailwind\",\r\n    },\r\n    {\r\n      skillname: \"Node.js\",\r\n    },\r\n    {\r\n      skillname: \"Linux\",\r\n    },\r\n    {\r\n      skillname: \"Firebase\",\r\n    },\r\n    {\r\n      skillname: \"Mobile App and Client-Server Development\",\r\n    },\r\n    {\r\n      skillname: \"Database Management\",\r\n    },\r\n    {\r\n      skillname: \"Object Oriented Design\",\r\n    },\r\n    {\r\n      skillname: \"Full-Stack Development\",\r\n    },\r\n  ],\r\n  portfolio: [\r\n    {\r\n      name: \"UW Campus Map\",\r\n      description:\r\n        \"An application for finding the shortest path from one building to another at the University of Washington\",\r\n      imgurl: \"images/portfolio/CampusMap.jpg\",\r\n      skills: [\r\n        \"React\",\r\n        \"Typescript\",\r\n        \"Node.js\",\r\n        \"Spark Framework\",\r\n        \"Google API\",\r\n        \"JUnit Testing\",\r\n        \"Java\",\r\n      ],\r\n      link: \"/CampusMap\",\r\n      gitLink: \"https://github.com/EdisonLeung/Campus-Map\",\r\n      thumbnail: \"images/portfolio/CampusMap.jpg\",\r\n    },\r\n    {\r\n      name: \"Imagetagger for Advanced Robotics at UW\",\r\n      description: \"An Image Annotation Tool to effectively process over 30k+ images to feed into Machine Learning Model\",\r\n      imgurl: \"images/portfolio/Imagetagger.jpg\",\r\n      skills: [\"React\", \"Tailwind\", \"PostgreSQL\", \"Prisma\", \"Git\"],\r\n      link: \"https://github.com/\",\r\n    },\r\n  ],\r\n  noteworthy_projects: [\r\n    {\r\n      name: \"Dynamic Memory Allocator\",\r\n      description: \"Memory allocator that increases space utilization and decrease throughput using matrix transpose algorithms to optimize cache usage and reduce cache misses\",\r\n      link: \"https://github.com/EdisonLeung/Dynamic-Memory-Allocator\",\r\n      skills: [\"C\", \"blocking\"],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default resumeData;\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  useRoutes,\r\n} from \"react-router-dom\";\r\n  \r\n// import CampusMaps component\r\nimport CampusMap from \"./projects/CampusMap\";\r\n\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Resume from './components/Resume';\r\nimport Portfolio from './components/Portfolio';\r\nimport ContactUs from './components/ContactUs';\r\nimport Footer from './components/Footer';\r\nimport resumeData from './resumeData';\r\n\r\nconst App = () => {\r\n  let routes = useRoutes([\r\n    { path: \"/\", element: <Home/> },\r\n    { path: \"/CampusMap\", element: <CampusMap resumeData={resumeData} /> },    \r\n  ]);\r\n  return routes;\r\n};\r\nconst AppWrapper = () => {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <App />\r\n    </Router>\r\n  );\r\n};\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header resumeData={resumeData}/>\r\n      <About resumeData={resumeData}/>\r\n      <Resume resumeData={resumeData}/>\r\n      <Portfolio resumeData={resumeData}/>\r\n      <ContactUs resumeData={resumeData}/>\r\n      <Footer resumeData={resumeData}/>\r\n    </div>\r\n  );}\r\nexport default AppWrapper;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}